apply plugin: "com.android.library"
apply plugin: "kotlin-multiplatform"

version = project.hydra_log_version
group = "ru.pocketbyte.hydra"

android {
    compileSdkVersion project.android_sdk_compile
    buildToolsVersion project.android_build_tool_version

    defaultConfig {
        minSdkVersion project.android_sdk_min
        targetSdkVersion project.android_sdk_target
        versionCode 1
        versionName project.version
    }
    buildTypes {
        release { }
        debug { }
    }
}

kotlin {
    android {
        publishLibraryVariants("release", "debug")
    }

    targets {
        jvm("jvm")
        android("android")

        js("js")

        macosX64("macos")
        iosX64("iosX64")
        iosArm64("iosArm64")
        iosArm32("iosArm32")

        linuxX64("linuxX64")
        linuxArm32Hfp("linuxArm32Hfp")
        androidNativeArm32("androidNativeArm32")
        androidNativeArm64("androidNativeArm64")

        mingwX64("mingw")
    }

    sourceSets {
        // =================================
        // Main Source Sets
        commonMain.dependencies {
            api 'org.jetbrains.kotlin:kotlin-stdlib-common'
        }

        commonTest {
            dependsOn commonMain
            dependencies {
                api "org.jetbrains.kotlin:kotlin-test"
                api "org.jetbrains.kotlin:kotlin-test-junit"
            }
        }

        // =================================
        // JVM based Source Sets
        jvmCommonMain {
            dependsOn commonMain
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib'
            }
        }

        jvmMain {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib'
            }
        }

        androidMain {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib'
                api "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
            }
        }

        configure([jvmMain, androidMain]) {
            dependsOn jvmCommonMain
        }

        // Tests
        jvmCommonTest {
            dependsOn jvmCommonMain
            dependsOn commonTest
        }

        configure([jvmTest]) {
            dependsOn jvmCommonTest
            dependsOn jvmMain
        }

        configure([androidTest]) {
            dependsOn jvmCommonTest
            dependsOn androidMain
        }

        // =================================
        // JS Source Sets
        jsMain {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib'
                api "org.jetbrains.kotlin:kotlin-stdlib-js"
            }
        }

        jsTest {
            dependsOn jsMain
            dependencies {
                api "org.jetbrains.kotlin:kotlin-test"
                api "org.jetbrains.kotlin:kotlin-test-js"
            }
        }

        // =================================
        // Native based Source Sets
        nativeCommonMain { dependsOn commonMain }
        nativeMain {}
        appleMain {}
        androidNativeMain {}

        configure([nativeMain, appleMain, androidNativeMain]) {
            dependsOn nativeCommonMain
        }
        
        configure([linuxX64Main, linuxArm32HfpMain, mingwMain]) {
            dependsOn nativeMain
        }

        configure([androidNativeArm32Main, androidNativeArm64Main]) {
            dependsOn androidNativeMain
        }

        configure([iosX64Main, iosArm64Main, iosArm32Main, macosMain]) {
            dependsOn appleMain
        }

        //Tests

        nativeCommonTest {
            dependsOn nativeCommonMain
            dependsOn commonTest
        }
        nativeTest { dependsOn nativeMain }
        appleTest { dependsOn appleMain }
        androidNativeTest { dependsOn androidNativeMain }

        configure([nativeTest, appleTest, androidNativeTest]) {
            dependsOn nativeCommonTest
        }

        configure([linuxX64Test, linuxArm32HfpTest, mingwTest]) {
            dependsOn nativeTest
        }

        configure([androidNativeArm32Test, androidNativeArm64Test]) {
            dependsOn androidNativeTest
        }

        configure([iosX64Test, iosArm64Test, iosArm32Test, macosTest]) {
            dependsOn appleTest
        }
    }
}

//==================================================================================================
// Publication
//==================================================================================================

apply plugin: "maven-publish"
apply plugin: "com.github.dcendents.android-maven"

publishing {
    publications {
        kotlinMultiplatform {
            artifactId = project.name
        }
    }
    repositories {
        maven {
            url = "https://api.bintray.com/content/pocketbyte/hydra/${project.name}/${project.version}"
            credentials {
                username project.hasProperty('bintray.publish.user') ? project.property('bintray.publish.user') : ''
                password project.hasProperty('bintray.publish.apikey') ? project.property('bintray.publish.apikey') : ''
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                groupId project.group
                artifactId "${project.name}-android"
            }
            withXml {
                def root = asNode()

                def dependencies = root.get('dependencies') ?: root.appendNode('dependencies')

                // Add common dependency
                def commonDependency = dependencies.appendNode('dependency')
                commonDependency.appendNode('groupId', project.group)
                commonDependency.appendNode('artifactId', "${project.name}-jvm")
                commonDependency.appendNode('version', project.version)
                commonDependency.appendNode('scope', 'runtime')
            }
        }
    }
}